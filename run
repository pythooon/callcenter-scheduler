#!/bin/bash

if [[ $EUID -ne 0 ]]; then
    echo "Ten skrypt musi być uruchomiony jako root. Użyj sudo."
    exit 1
fi

copy_env_files() {
    echo "📁 Sprawdzanie i kopiowanie plików .env..."

    for dir in "." "./backend" "./frontend"; do
        env_file="$dir/.env"
        example_file="$dir/.env.example"

        if [[ -f "$env_file" ]]; then
            echo "✅ Plik $env_file już istnieje – pomijam kopiowanie."
        elif [[ -f "$example_file" ]]; then
            cp "$example_file" "$env_file"
            echo "📄 Skopiowano $example_file do $env_file"
        else
            echo "⚠️ Brak pliku $example_file – pomijam kopiowanie."
        fi
    done
}

get_app_env() {
    if [[ -f .env ]]; then
        export $(grep -v '^#' .env | xargs)
        echo $APP_ENV
    else
        echo "❌ Błąd: plik .env nie został znaleziony!"
        exit 1
    fi
}

copy_nginx_config_files() {
    env=$(get_app_env)
    echo "⚙️  Kopiowanie konfiguracji Nginx na podstawie APP_ENV=$env..."

    cp "./backend/nginx/api.conf.$env.example" "./backend/nginx/api.conf"
    cp "./backend/nginx/frontend.conf.$env.example" "./backend/nginx/frontend.conf"

    echo "✅ Skonfigurowano pliki Nginx."
}

show_menu() {
    clear
    echo "---------------------------------------------"
    echo " 🐳 Menu zarządzania kontenerami Docker Compose"
    echo "---------------------------------------------"
    echo "1) Zbuduj wszystkie serwisy"
    echo "2) Restartuj wszystkie serwisy"
    echo "3) Wymuś przebudowę i restart"
    echo "4) Zbuduj i restartuj konkretny serwis"
    echo "5) Zbuduj wszystkie i restartuj"
    echo "6) Uruchom wszystkie serwisy"
    echo "7) Podgląd logów wszystkich serwisów"
    echo "8) Podgląd logów konkretnego serwisu"
    echo "9) Sprawdź status serwisów"
    echo "10) Zatrzymaj i usuń wszystkie serwisy"
    echo "11) Wyjście"
    echo "---------------------------------------------"
}

build_services() {
    echo "🔨 Budowanie wszystkich serwisów..."
    docker compose build
}

restart_services() {
    echo "🔁 Restartowanie wszystkich serwisów..."
    docker compose restart
}

force_recreate_services() {
    echo "♻️  Wymuszanie przebudowy i restartu wszystkich serwisów..."
    docker compose up --force-recreate -d
}

build_and_restart_service() {
    echo "🔧 Podaj nazwę serwisu do zbudowania i restartu:"
    read service
    docker compose up --build --no-deps -d "$service"
}

build_all_and_restart() {
    echo "🏗️  Budowanie i uruchamianie wszystkich serwisów..."
    docker compose up --build -d
}

start_services() {
    echo "🚀 Uruchamianie wszystkich serwisów..."
    docker compose up -d
}

view_logs() {
    echo "📋 Wyświetlanie logów wszystkich serwisów..."
    docker compose logs -f
}

view_logs_for_service() {
    echo "📋 Podaj nazwę serwisu do podglądu logów:"
    read service
    if [[ -z "$service" ]]; then
        echo "❗ Błąd: nie podano nazwy serwisu."
        return
    fi
    docker compose logs -f "$service"
}

check_docker_status() {
    echo "📦 Sprawdzanie statusu serwisów..."
    docker compose ps
}

shutdown_and_remove_all_services() {
    echo "🛑 Zatrzymywanie i usuwanie wszystkich serwisów..."
    docker compose down --volumes --remove-orphans
    echo "🧹 Wszystkie serwisy zostały zatrzymane i usunięte."
}

set_permissions() {
    echo "🔐 Ustawianie uprawnień..."
    chmod +x run.sh
    chmod -R 755 ./backend/db_data
    echo "✅ Uprawnienia ustawione pomyślnie."
}

while true; do
    copy_env_files
    copy_nginx_config_files

    show_menu
    echo -n "🔽 Wybierz opcję: "
    read option

    case $option in
        1) build_services ;;
        2) restart_services ;;
        3) force_recreate_services ;;
        4) build_and_restart_service ;;
        5) build_all_and_restart ;;
        6) start_services ;;
        7) view_logs ;;
        8) view_logs_for_service ;;
        9) check_docker_status ;;
        10) shutdown_and_remove_all_services ;;
        11)
            echo "👋 Zamykanie skryptu..."
            exit 0
            ;;
        *) echo "❌ Nieprawidłowa opcja. Spróbuj ponownie." ;;
    esac

    echo "🔁 Naciśnij dowolny klawisz, aby kontynuować..."
    read -n 1 -s
done
